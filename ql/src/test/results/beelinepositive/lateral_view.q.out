Saving all output to "!!{outputDirectory}!!/lateral_view.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/lateral_view.q
>>>  
>>>  
>>>  
>>>  CREATE TABLE tmp_pyang_lv (inputs string) STORED AS RCFILE;
No rows affected 
>>>  INSERT OVERWRITE TABLE tmp_pyang_lv SELECT key FROM src;
'key'
No rows selected 
>>>  
>>>  EXPLAIN SELECT * FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol SORT BY key ASC, myCol ASC LIMIT 1;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_FUNCTION array 1 2 3)) myCol (TOK_TABALIAS myTable))) (TOK_TABREF (TOK_TABNAME src)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL myCol))) (TOK_LIMIT 1)))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-2 depends on stages: Stage-1'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Lateral View Forward'
'              Select Operator'
'                SELECT * : (no compute)'
'                Lateral View Join Operator'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Select Operator'
'                    expressions:'
'                          expr: _col0'
'                          type: string'
'                          expr: _col1'
'                          type: string'
'                          expr: _col2'
'                          type: int'
'                    outputColumnNames: _col0, _col1, _col2'
'                    Reduce Output Operator'
'                      key expressions:'
'                            expr: _col0'
'                            type: string'
'                            expr: _col2'
'                            type: int'
'                      sort order: ++'
'                      tag: -1'
'                      value expressions:'
'                            expr: _col0'
'                            type: string'
'                            expr: _col1'
'                            type: string'
'                            expr: _col2'
'                            type: int'
'              Select Operator'
'                expressions:'
'                      expr: array(1,2,3)'
'                      type: array<int>'
'                outputColumnNames: _col0'
'                UDTF Operator'
'                  function name: explode'
'                  Lateral View Join Operator'
'                    outputColumnNames: _col0, _col1, _col2'
'                    Select Operator'
'                      expressions:'
'                            expr: _col0'
'                            type: string'
'                            expr: _col1'
'                            type: string'
'                            expr: _col2'
'                            type: int'
'                      outputColumnNames: _col0, _col1, _col2'
'                      Reduce Output Operator'
'                        key expressions:'
'                              expr: _col0'
'                              type: string'
'                              expr: _col2'
'                              type: int'
'                        sort order: ++'
'                        tag: -1'
'                        value expressions:'
'                              expr: _col0'
'                              type: string'
'                              expr: _col1'
'                              type: string'
'                              expr: _col2'
'                              type: int'
'      Reduce Operator Tree:'
'        Extract'
'          Limit'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:/!!ELIDED!! '
'            Reduce Output Operator'
'              key expressions:'
'                    expr: _col0'
'                    type: string'
'                    expr: _col2'
'                    type: int'
'              sort order: ++'
'              tag: -1'
'              value expressions:'
'                    expr: _col0'
'                    type: string'
'                    expr: _col1'
'                    type: string'
'                    expr: _col2'
'                    type: int'
'      Reduce Operator Tree:'
'        Extract'
'          Limit'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: 1'
''
''
121 rows selected 
>>>  EXPLAIN SELECT myTable.* FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol LIMIT 3;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_FUNCTION array 1 2 3)) myCol (TOK_TABALIAS myTable))) (TOK_TABREF (TOK_TABNAME src)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME myTable)))) (TOK_LIMIT 3)))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Lateral View Forward'
'              Select Operator'
'                SELECT * : (no compute)'
'                Lateral View Join Operator'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Select Operator'
'                    expressions:'
'                          expr: _col2'
'                          type: int'
'                    outputColumnNames: _col0'
'                    Limit'
'                      File Output Operator'
'                        compressed: false'
'                        GlobalTableId: 0'
'                        table:'
'                            input format: org.apache.hadoop.mapred.TextInputFormat'
'                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              Select Operator'
'                expressions:'
'                      expr: array(1,2,3)'
'                      type: array<int>'
'                outputColumnNames: _col0'
'                UDTF Operator'
'                  function name: explode'
'                  Lateral View Join Operator'
'                    outputColumnNames: _col0, _col1, _col2'
'                    Select Operator'
'                      expressions:'
'                            expr: _col2'
'                            type: int'
'                      outputColumnNames: _col0'
'                      Limit'
'                        File Output Operator'
'                          compressed: false'
'                          GlobalTableId: 0'
'                          table:'
'                              input format: org.apache.hadoop.mapred.TextInputFormat'
'                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: 3'
''
''
58 rows selected 
>>>  EXPLAIN SELECT myTable.myCol, myTable2.myCol2 FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol LATERAL VIEW explode(array('a', 'b', 'c')) myTable2 AS myCol2 LIMIT 9;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_FUNCTION array 'a' 'b' 'c')) myCol2 (TOK_TABALIAS myTable2))) (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_FUNCTION array 1 2 3)) myCol (TOK_TABALIAS myTable))) (TOK_TABREF (TOK_TABNAME src))))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL myTable) myCol)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL myTable2) myCol2))) (TOK_LIMIT 9)))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Lateral View Forward'
'              Select Operator'
'                SELECT * : (no compute)'
'                Lateral View Join Operator'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Lateral View Forward'
'                    Select Operator'
'                      SELECT * : (no compute)'
'                      Lateral View Join Operator'
'                        outputColumnNames: _col0, _col1, _col2, _col3'
'                        Select Operator'
'                          expressions:'
'                                expr: _col2'
'                                type: int'
'                                expr: _col3'
'                                type: string'
'                          outputColumnNames: _col0, _col1'
'                          Limit'
'                            File Output Operator'
'                              compressed: false'
'                              GlobalTableId: 0'
'                              table:'
'                                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    Select Operator'
'                      expressions:'
'                            expr: array('a','b','c')'
'                            type: array<string>'
'                      outputColumnNames: _col0'
'                      UDTF Operator'
'                        function name: explode'
'                        Lateral View Join Operator'
'                          outputColumnNames: _col0, _col1, _col2, _col3'
'                          Select Operator'
'                            expressions:'
'                                  expr: _col2'
'                                  type: int'
'                                  expr: _col3'
'                                  type: string'
'                            outputColumnNames: _col0, _col1'
'                            Limit'
'                              File Output Operator'
'                                compressed: false'
'                                GlobalTableId: 0'
'                                table:'
'                                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              Select Operator'
'                expressions:'
'                      expr: array(1,2,3)'
'                      type: array<int>'
'                outputColumnNames: _col0'
'                UDTF Operator'
'                  function name: explode'
'                  Lateral View Join Operator'
'                    outputColumnNames: _col0, _col1, _col2'
'                    Lateral View Forward'
'                      Select Operator'
'                        SELECT * : (no compute)'
'                        Lateral View Join Operator'
'                          outputColumnNames: _col0, _col1, _col2, _col3'
'                          Select Operator'
'                            expressions:'
'                                  expr: _col2'
'                                  type: int'
'                                  expr: _col3'
'                                  type: string'
'                            outputColumnNames: _col0, _col1'
'                            Limit'
'                              File Output Operator'
'                                compressed: false'
'                                GlobalTableId: 0'
'                                table:'
'                                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                      Select Operator'
'                        expressions:'
'                              expr: array('a','b','c')'
'                              type: array<string>'
'                        outputColumnNames: _col0'
'                        UDTF Operator'
'                          function name: explode'
'                          Lateral View Join Operator'
'                            outputColumnNames: _col0, _col1, _col2, _col3'
'                            Select Operator'
'                              expressions:'
'                                    expr: _col2'
'                                    type: int'
'                                    expr: _col3'
'                                    type: string'
'                              outputColumnNames: _col0, _col1'
'                              Limit'
'                                File Output Operator'
'                                  compressed: false'
'                                  GlobalTableId: 0'
'                                  table:'
'                                      input format: org.apache.hadoop.mapred.TextInputFormat'
'                                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: 9'
''
''
118 rows selected 
>>>  EXPLAIN SELECT myTable2.* FROM src LATERAL VIEW explode(array(array(1,2,3))) myTable AS myCol LATERAL VIEW explode(myTable.myCol) myTable2 AS myCol2 LIMIT 3;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (. (TOK_TABLE_OR_COL myTable) myCol)) myCol2 (TOK_TABALIAS myTable2))) (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_FUNCTION array (TOK_FUNCTION array 1 2 3))) myCol (TOK_TABALIAS myTable))) (TOK_TABREF (TOK_TABNAME src))))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME myTable2)))) (TOK_LIMIT 3)))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Lateral View Forward'
'              Select Operator'
'                SELECT * : (no compute)'
'                Lateral View Join Operator'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Lateral View Forward'
'                    Select Operator'
'                      SELECT * : (no compute)'
'                      Lateral View Join Operator'
'                        outputColumnNames: _col0, _col1, _col2, _col3'
'                        Select Operator'
'                          expressions:'
'                                expr: _col3'
'                                type: int'
'                          outputColumnNames: _col0'
'                          Limit'
'                            File Output Operator'
'                              compressed: false'
'                              GlobalTableId: 0'
'                              table:'
'                                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    Select Operator'
'                      expressions:'
'                            expr: _col2'
'                            type: array<int>'
'                      outputColumnNames: _col0'
'                      UDTF Operator'
'                        function name: explode'
'                        Lateral View Join Operator'
'                          outputColumnNames: _col0, _col1, _col2, _col3'
'                          Select Operator'
'                            expressions:'
'                                  expr: _col3'
'                                  type: int'
'                            outputColumnNames: _col0'
'                            Limit'
'                              File Output Operator'
'                                compressed: false'
'                                GlobalTableId: 0'
'                                table:'
'                                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              Select Operator'
'                expressions:'
'                      expr: array(array(1,2,3))'
'                      type: array<array<int>>'
'                outputColumnNames: _col0'
'                UDTF Operator'
'                  function name: explode'
'                  Lateral View Join Operator'
'                    outputColumnNames: _col0, _col1, _col2'
'                    Lateral View Forward'
'                      Select Operator'
'                        SELECT * : (no compute)'
'                        Lateral View Join Operator'
'                          outputColumnNames: _col0, _col1, _col2, _col3'
'                          Select Operator'
'                            expressions:'
'                                  expr: _col3'
'                                  type: int'
'                            outputColumnNames: _col0'
'                            Limit'
'                              File Output Operator'
'                                compressed: false'
'                                GlobalTableId: 0'
'                                table:'
'                                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                      Select Operator'
'                        expressions:'
'                              expr: _col2'
'                              type: array<int>'
'                        outputColumnNames: _col0'
'                        UDTF Operator'
'                          function name: explode'
'                          Lateral View Join Operator'
'                            outputColumnNames: _col0, _col1, _col2, _col3'
'                            Select Operator'
'                              expressions:'
'                                    expr: _col3'
'                                    type: int'
'                              outputColumnNames: _col0'
'                              Limit'
'                                File Output Operator'
'                                  compressed: false'
'                                  GlobalTableId: 0'
'                                  table:'
'                                      input format: org.apache.hadoop.mapred.TextInputFormat'
'                                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: 3'
''
''
110 rows selected 
>>>  
>>>  -- Verify that * selects columns from both tables
>>>  SELECT * FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol SORT BY key ASC, myCol ASC LIMIT 1;
'key','value','mycol'
'0','val_0','1'
1 row selected 
>>>  -- TABLE.* should be supported
>>>  SELECT myTable.* FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol LIMIT 3;
'mycol'
'1'
'2'
'3'
3 rows selected 
>>>  -- Multiple lateral views should result in a Cartesian product
>>>  SELECT myTable.myCol, myTable2.myCol2 FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol LATERAL VIEW explode(array('a', 'b', 'c')) myTable2 AS myCol2 LIMIT 9;
'mycol','mycol2'
'1','a'
'1','b'
'1','c'
'2','a'
'2','b'
'2','c'
'3','a'
'3','b'
'3','c'
9 rows selected 
>>>  -- Should be able to reference tables generated earlier
>>>  SELECT myTable2.* FROM src LATERAL VIEW explode(array(array(1,2,3))) myTable AS myCol LATERAL VIEW explode(myTable.myCol) myTable2 AS myCol2 LIMIT 3;
'mycol2'
'1'
'2'
'3'
3 rows selected 
>>>  
>>>  EXPLAIN 
SELECT myCol from tmp_pyang_lv LATERAL VIEW explode(array(1,2,3)) myTab as myCol limit 3;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_FUNCTION array 1 2 3)) myCol (TOK_TABALIAS myTab))) (TOK_TABREF (TOK_TABNAME tmp_pyang_lv)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL myCol))) (TOK_LIMIT 3)))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        tmp_pyang_lv '
'          TableScan'
'            alias: tmp_pyang_lv'
'            Lateral View Forward'
'              Select Operator'
'                SELECT * : (no compute)'
'                Lateral View Join Operator'
'                  outputColumnNames: _col0, _col1'
'                  Select Operator'
'                    expressions:'
'                          expr: _col1'
'                          type: int'
'                    outputColumnNames: _col0'
'                    Limit'
'                      File Output Operator'
'                        compressed: false'
'                        GlobalTableId: 0'
'                        table:'
'                            input format: org.apache.hadoop.mapred.TextInputFormat'
'                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              Select Operator'
'                expressions:'
'                      expr: array(1,2,3)'
'                      type: array<int>'
'                outputColumnNames: _col0'
'                UDTF Operator'
'                  function name: explode'
'                  Lateral View Join Operator'
'                    outputColumnNames: _col0, _col1'
'                    Select Operator'
'                      expressions:'
'                            expr: _col1'
'                            type: int'
'                      outputColumnNames: _col0'
'                      Limit'
'                        File Output Operator'
'                          compressed: false'
'                          GlobalTableId: 0'
'                          table:'
'                              input format: org.apache.hadoop.mapred.TextInputFormat'
'                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: 3'
''
''
58 rows selected 
>>>  
>>>  SELECT myCol from tmp_PYANG_lv LATERAL VIEW explode(array(1,2,3)) myTab as myCol limit 3;
'mycol'
'1'
'2'
'3'
3 rows selected 
>>>  
>>>  CREATE TABLE tmp_pyang_src_rcfile (key string, value array<string>) STORED AS RCFILE;
No rows affected 
>>>  INSERT OVERWRITE TABLE tmp_pyang_src_rcfile SELECT key, array(value) FROM src ORDER BY key LIMIT 20;
'key','_c1'
No rows selected 
>>>  
>>>  SELECT key,value from tmp_pyang_src_rcfile LATERAL VIEW explode(value) myTable AS myCol;
'key','value'
'0','[val_0]'
'0','[val_0]'
'0','[val_0]'
'10','[val_10]'
'100','[val_100]'
'100','[val_100]'
'103','[val_103]'
'103','[val_103]'
'104','[val_104]'
'104','[val_104]'
'105','[val_105]'
'11','[val_11]'
'111','[val_111]'
'113','[val_113]'
'113','[val_113]'
'114','[val_114]'
'116','[val_116]'
'118','[val_118]'
'118','[val_118]'
'119','[val_119]'
20 rows selected 
>>>  SELECT myCol from tmp_pyang_src_rcfile LATERAL VIEW explode(value) myTable AS myCol;
'mycol'
'val_0'
'val_0'
'val_0'
'val_10'
'val_100'
'val_100'
'val_103'
'val_103'
'val_104'
'val_104'
'val_105'
'val_11'
'val_111'
'val_113'
'val_113'
'val_114'
'val_116'
'val_118'
'val_118'
'val_119'
20 rows selected 
>>>  SELECT * from tmp_pyang_src_rcfile LATERAL VIEW explode(value) myTable AS myCol;
'key','value','mycol'
'0','[val_0]','val_0'
'0','[val_0]','val_0'
'0','[val_0]','val_0'
'10','[val_10]','val_10'
'100','[val_100]','val_100'
'100','[val_100]','val_100'
'103','[val_103]','val_103'
'103','[val_103]','val_103'
'104','[val_104]','val_104'
'104','[val_104]','val_104'
'105','[val_105]','val_105'
'11','[val_11]','val_11'
'111','[val_111]','val_111'
'113','[val_113]','val_113'
'113','[val_113]','val_113'
'114','[val_114]','val_114'
'116','[val_116]','val_116'
'118','[val_118]','val_118'
'118','[val_118]','val_118'
'119','[val_119]','val_119'
20 rows selected 
>>>  
>>>  SELECT subq.key,subq.value 
FROM ( 
SELECT * from tmp_pyang_src_rcfile LATERAL VIEW explode(value) myTable AS myCol 
)subq;
'key','value'
'0','[val_0]'
'0','[val_0]'
'0','[val_0]'
'10','[val_10]'
'100','[val_100]'
'100','[val_100]'
'103','[val_103]'
'103','[val_103]'
'104','[val_104]'
'104','[val_104]'
'105','[val_105]'
'11','[val_11]'
'111','[val_111]'
'113','[val_113]'
'113','[val_113]'
'114','[val_114]'
'116','[val_116]'
'118','[val_118]'
'118','[val_118]'
'119','[val_119]'
20 rows selected 
>>>  
>>>  SELECT subq.myCol 
FROM ( 
SELECT * from tmp_pyang_src_rcfile LATERAL VIEW explode(value) myTable AS myCol 
)subq;
'mycol'
'val_0'
'val_0'
'val_0'
'val_10'
'val_100'
'val_100'
'val_103'
'val_103'
'val_104'
'val_104'
'val_105'
'val_11'
'val_111'
'val_113'
'val_113'
'val_114'
'val_116'
'val_118'
'val_118'
'val_119'
20 rows selected 
>>>  
>>>  SELECT subq.key 
FROM ( 
SELECT key, value from tmp_pyang_src_rcfile LATERAL VIEW explode(value) myTable AS myCol 
)subq;
'key'
'0'
'0'
'0'
'10'
'100'
'100'
'103'
'103'
'104'
'104'
'105'
'11'
'111'
'113'
'113'
'114'
'116'
'118'
'118'
'119'
20 rows selected 
>>>  
>>>  EXPLAIN SELECT value, myCol from (SELECT key, array(value[0]) AS value FROM tmp_pyang_src_rcfile GROUP BY value[0], key) a 
LATERAL VIEW explode(value) myTable AS myCol;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_LATERAL_VIEW (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION explode (TOK_TABLE_OR_COL value)) myCol (TOK_TABALIAS myTable))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME tmp_pyang_src_rcfile))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION array ([ (TOK_TABLE_OR_COL value) 0)) value)) (TOK_GROUPBY ([ (TOK_TABLE_OR_COL value) 0) (TOK_TABLE_OR_COL key)))) a))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL value)) (TOK_SELEXPR (TOK_TABLE_OR_COL myCol)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a:tmp_pyang_src_rcfile '
'          TableScan'
'            alias: tmp_pyang_src_rcfile'
'            Select Operator'
'              expressions:'
'                    expr: value'
'                    type: array<string>'
'                    expr: key'
'                    type: string'
'              outputColumnNames: value, key'
'              Group By Operator'
'                bucketGroup: false'
'                keys:'
'                      expr: value[0]'
'                      type: string'
'                      expr: key'
'                      type: string'
'                mode: hash'
'                outputColumnNames: _col0, _col1'
'                Reduce Output Operator'
'                  key expressions:'
'                        expr: _col0'
'                        type: string'
'                        expr: _col1'
'                        type: string'
'                  sort order: ++'
'                  Map-reduce partition columns:'
'                        expr: _col0'
'                        type: string'
'                        expr: _col1'
'                        type: string'
'                  tag: -1'
'      Reduce Operator Tree:'
'        Group By Operator'
'          bucketGroup: false'
'          keys:'
'                expr: KEY._col0'
'                type: string'
'                expr: KEY._col1'
'                type: string'
'          mode: mergepartial'
'          outputColumnNames: _col0, _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col1'
'                  type: string'
'                  expr: array(_col0)'
'                  type: array<string>'
'            outputColumnNames: _col0, _col1'
'            Lateral View Forward'
'              Select Operator'
'                SELECT * : (no compute)'
'                Lateral View Join Operator'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Select Operator'
'                    expressions:'
'                          expr: _col1'
'                          type: array<string>'
'                          expr: _col2'
'                          type: string'
'                    outputColumnNames: _col0, _col1'
'                    File Output Operator'
'                      compressed: false'
'                      GlobalTableId: 0'
'                      table:'
'                          input format: org.apache.hadoop.mapred.TextInputFormat'
'                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              Select Operator'
'                expressions:'
'                      expr: _col1'
'                      type: array<string>'
'                outputColumnNames: _col0'
'                UDTF Operator'
'                  function name: explode'
'                  Lateral View Join Operator'
'                    outputColumnNames: _col0, _col1, _col2'
'                    Select Operator'
'                      expressions:'
'                            expr: _col1'
'                            type: array<string>'
'                            expr: _col2'
'                            type: string'
'                      outputColumnNames: _col0, _col1'
'                      File Output Operator'
'                        compressed: false'
'                        GlobalTableId: 0'
'                        table:'
'                            input format: org.apache.hadoop.mapred.TextInputFormat'
'                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
106 rows selected 
>>>  
>>>  SELECT value, myCol from (SELECT key, array(value[0]) AS value FROM tmp_pyang_src_rcfile GROUP BY value[0], key) a 
LATERAL VIEW explode(value) myTable AS myCol;
'value','mycol'
'[val_0]','val_0'
'[val_10]','val_10'
'[val_100]','val_100'
'[val_103]','val_103'
'[val_104]','val_104'
'[val_105]','val_105'
'[val_11]','val_11'
'[val_111]','val_111'
'[val_113]','val_113'
'[val_114]','val_114'
'[val_116]','val_116'
'[val_118]','val_118'
'[val_119]','val_119'
13 rows selected 
>>>  
>>>  
>>>  
>>>  !record

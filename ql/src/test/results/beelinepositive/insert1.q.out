Saving all output to "!!{outputDirectory}!!/insert1.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/insert1.q
>>>  
>>>  
>>>  create table insert1(key int, value string) stored as textfile;
No rows affected 
>>>  create table insert2(key int, value string) stored as textfile;
No rows affected 
>>>  insert overwrite table insert1 select a.key, a.value from insert2 a WHERE (a.key=-1);
'key','value'
No rows selected 
>>>  
>>>  explain insert into table insert1 select a.key, a.value from insert2 a WHERE (a.key=-1);
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME insert2) a)) (TOK_INSERT (TOK_INSERT_INTO (TOK_TAB (TOK_TABNAME insert1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) key) (- 1)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-5 depends on stages: Stage-1 , consists of Stage-4, Stage-3'
'  Stage-4'
'  Stage-0 depends on stages: Stage-4, Stage-3'
'  Stage-2 depends on stages: Stage-0'
'  Stage-3'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            Filter Operator'
'              predicate:'
'                  expr: (key = (- 1))'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: int'
'                      expr: value'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                File Output Operator'
'                  compressed: false'
'                  GlobalTableId: 1'
'                  table:'
'                      input format: org.apache.hadoop.mapred.TextInputFormat'
'                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                      name: insert1.insert1'
''
'  Stage: Stage-5'
'    Conditional Operator'
''
'  Stage: Stage-4'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: pfile:!!{hive.exec.scratchdir}!!'
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: false'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: insert1.insert1'
''
'  Stage: Stage-2'
'    Stats-Aggr Operator'
''
'  Stage: Stage-3'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        pfile:!!{hive.exec.scratchdir}!! '
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                  name: insert1.insert1'
''
''
74 rows selected 
>>>  explain insert into table INSERT1 select a.key, a.value from insert2 a WHERE (a.key=-1);
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME insert2) a)) (TOK_INSERT (TOK_INSERT_INTO (TOK_TAB (TOK_TABNAME INSERT1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) key) (- 1)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-5 depends on stages: Stage-1 , consists of Stage-4, Stage-3'
'  Stage-4'
'  Stage-0 depends on stages: Stage-4, Stage-3'
'  Stage-2 depends on stages: Stage-0'
'  Stage-3'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            Filter Operator'
'              predicate:'
'                  expr: (key = (- 1))'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: int'
'                      expr: value'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                File Output Operator'
'                  compressed: false'
'                  GlobalTableId: 1'
'                  table:'
'                      input format: org.apache.hadoop.mapred.TextInputFormat'
'                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                      name: insert1.insert1'
''
'  Stage: Stage-5'
'    Conditional Operator'
''
'  Stage: Stage-4'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: pfile:!!{hive.exec.scratchdir}!!'
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: false'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: insert1.insert1'
''
'  Stage: Stage-2'
'    Stats-Aggr Operator'
''
'  Stage: Stage-3'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        pfile:!!{hive.exec.scratchdir}!! '
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                  name: insert1.insert1'
''
''
74 rows selected 
>>>  
>>>  
>>>  !record

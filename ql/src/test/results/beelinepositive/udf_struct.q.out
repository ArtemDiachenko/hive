Saving all output to "!!{outputDirectory}!!/udf_struct.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/udf_struct.q
>>>  DESCRIBE FUNCTION struct;
'tab_name'
'struct(col1, col2, col3, ...) - Creates a struct with the given field values'
1 row selected 
>>>  DESCRIBE FUNCTION EXTENDED struct;
'tab_name'
'struct(col1, col2, col3, ...) - Creates a struct with the given field values'
1 row selected 
>>>  
>>>  EXPLAIN 
SELECT struct(1), struct(1, "a"), struct(1, "b", 1.5).col1, struct(1, struct("a", 1.5)).col2.col1 
FROM src LIMIT 1;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION struct 1)) (TOK_SELEXPR (TOK_FUNCTION struct 1 "a")) (TOK_SELEXPR (. (TOK_FUNCTION struct 1 "b" 1.5) col1)) (TOK_SELEXPR (. (. (TOK_FUNCTION struct 1 (TOK_FUNCTION struct "a" 1.5)) col2) col1))) (TOK_LIMIT 1)))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Select Operator'
'              expressions:'
'                    expr: struct(1)'
'                    type: struct<col1:int>'
'                    expr: struct(1,'a')'
'                    type: struct<col1:int,col2:string>'
'                    expr: struct(1,'b',1.5).col1'
'                    type: int'
'                    expr: struct(1,struct('a',1.5)).col2.col1'
'                    type: string'
'              outputColumnNames: _col0, _col1, _col2, _col3'
'              Limit'
'                File Output Operator'
'                  compressed: false'
'                  GlobalTableId: 0'
'                  table:'
'                      input format: org.apache.hadoop.mapred.TextInputFormat'
'                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: 1'
''
''
38 rows selected 
>>>  
>>>  SELECT struct(1), struct(1, "a"), struct(1, "b", 1.5).col1, struct(1, struct("a", 1.5)).col2.col1 
FROM src LIMIT 1;
'_c0','_c1','col1','col1'
'[1]','[1, a]','1','a'
1 row selected 
>>>  !record

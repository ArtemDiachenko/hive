Saving all output to "!!{outputDirectory}!!/udaf_collect_set.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/udaf_collect_set.q
>>>  DESCRIBE FUNCTION collect_set;
'tab_name'
'collect_set(x) - Returns a set of objects with duplicate elements eliminated'
1 row selected 
>>>  DESCRIBE FUNCTION EXTENDED collect_set;
'tab_name'
'collect_set(x) - Returns a set of objects with duplicate elements eliminated'
1 row selected 
>>>  
>>>  set hive.map.aggr = false;
No rows affected 
>>>  set hive.groupby.skewindata = false;
No rows affected 
>>>  
>>>  SELECT key, collect_set(value) 
FROM src 
GROUP BY key ORDER BY key limit 20;
'key','_c1'
'0','[val_0]'
'10','[val_10]'
'100','[val_100]'
'103','[val_103]'
'104','[val_104]'
'105','[val_105]'
'11','[val_11]'
'111','[val_111]'
'113','[val_113]'
'114','[val_114]'
'116','[val_116]'
'118','[val_118]'
'119','[val_119]'
'12','[val_12]'
'120','[val_120]'
'125','[val_125]'
'126','[val_126]'
'128','[val_128]'
'129','[val_129]'
'131','[val_131]'
20 rows selected 
>>>  
>>>  set hive.map.aggr = true;
No rows affected 
>>>  set hive.groupby.skewindata = false;
No rows affected 
>>>  
>>>  SELECT key, collect_set(value) 
FROM src 
GROUP BY key ORDER BY key limit 20;
'key','_c1'
'0','[val_0]'
'10','[val_10]'
'100','[val_100]'
'103','[val_103]'
'104','[val_104]'
'105','[val_105]'
'11','[val_11]'
'111','[val_111]'
'113','[val_113]'
'114','[val_114]'
'116','[val_116]'
'118','[val_118]'
'119','[val_119]'
'12','[val_12]'
'120','[val_120]'
'125','[val_125]'
'126','[val_126]'
'128','[val_128]'
'129','[val_129]'
'131','[val_131]'
20 rows selected 
>>>  
>>>  set hive.map.aggr = false;
No rows affected 
>>>  set hive.groupby.skewindata = true;
No rows affected 
>>>  
>>>  SELECT key, collect_set(value) 
FROM src 
GROUP BY key ORDER BY key limit 20;
'key','_c1'
'0','[val_0]'
'10','[val_10]'
'100','[val_100]'
'103','[val_103]'
'104','[val_104]'
'105','[val_105]'
'11','[val_11]'
'111','[val_111]'
'113','[val_113]'
'114','[val_114]'
'116','[val_116]'
'118','[val_118]'
'119','[val_119]'
'12','[val_12]'
'120','[val_120]'
'125','[val_125]'
'126','[val_126]'
'128','[val_128]'
'129','[val_129]'
'131','[val_131]'
20 rows selected 
>>>  
>>>  set hive.map.aggr = true;
No rows affected 
>>>  set hive.groupby.skewindata = true;
No rows affected 
>>>  
>>>  SELECT key, collect_set(value) 
FROM src 
GROUP BY key ORDER BY key limit 20;
'key','_c1'
'0','[val_0]'
'10','[val_10]'
'100','[val_100]'
'103','[val_103]'
'104','[val_104]'
'105','[val_105]'
'11','[val_11]'
'111','[val_111]'
'113','[val_113]'
'114','[val_114]'
'116','[val_116]'
'118','[val_118]'
'119','[val_119]'
'12','[val_12]'
'120','[val_120]'
'125','[val_125]'
'126','[val_126]'
'128','[val_128]'
'129','[val_129]'
'131','[val_131]'
20 rows selected 
>>>  !record
